{
  "江湖项目创建": {
    "prefix": "jianghu-project",
    "body": [
      "// 创建江湖项目",
      "import { exec } from 'child_process';",
      "exec('jianghu-init project --type=${1:stand-alone} ${2:my-project}', (error, stdout, stderr) => {",
      "  if (error) {",
      "    console.error(`执行错误: ${error}`);",
      "    return;",
      "  }",
      "  console.log(`输出: ${stdout}`);",
      "});"
    ],
    "description": "创建江湖项目的代码片段"
  },
  "江湖CRUD生成": {
    "prefix": "jianghu-crud",
    "body": [
      "// 生成江湖CRUD页面",
      "import { exec } from 'child_process';",
      "exec('jianghu-init crud', (error, stdout, stderr) => {",
      "  if (error) {",
      "    console.error(`执行错误: ${error}`);",
      "    return;",
      "  }",
      "  console.log(`输出: ${stdout}`);",
      "});"
    ],
    "description": "生成江湖CRUD页面的代码片段"
  },
  "江湖初始化导入": {
    "prefix": "jianghu-import",
    "body": [
      "// 导入江湖初始化模块",
      "interface JianghuInterface {",
      "  createProject: () => void;",
      "  generateCrud: () => void;",
      "}",
      "",
      "const jianghu: JianghuInterface = {",
      "  createProject: () => {",
      "    import { exec } from 'child_process';",
      "    exec('jianghu-init project --type=${1:stand-alone} ${2:my-project}');",
      "  },",
      "  generateCrud: () => {",
      "    import { exec } from 'child_process';",
      "    exec('jianghu-init crud');",
      "  }",
      "};"
    ],
    "description": "导入江湖初始化模块的代码片段"
  }
} 